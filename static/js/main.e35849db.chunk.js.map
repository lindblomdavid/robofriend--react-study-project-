{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAmBeA,EAjBF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE3B,OAEF,sBAAKC,UAAU,sDAAf,UACA,qBAAKC,IAAG,+BAA2BF,EAA3B,YAAyCG,IAAK,iBACtD,gCACA,6BAAKL,IACL,4BAAIC,WCYWK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGlB,OACA,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OAAO,cAAC,EAAD,CAEPR,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAAOM,EAAOG,GAAGT,OAHXM,EAAOG,GAAGR,UCOLS,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE/B,OACE,qBAAKV,UAAW,MAAhB,SACF,uBAAQA,UAAW,oCACnBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEGI,G,MATA,SAACC,GAEd,OACA,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACCJ,EAAMK,aCoBMC,E,kDAvBb,WAAYN,GAAQ,IAAD,8BACjB,gBACKO,MAAQ,CACXC,UAAU,GAHK,E,qDAQnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAS,M,oBAI3B,WACE,OAAIG,KAAKJ,MAAMC,SACN,yDAGFG,KAAKX,MAAMK,a,GAnBKQ,aCkDZC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAOkC,S,oBAQvC,WACE,MAA+BZ,KAAKJ,MAA5BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAGxD,OAAQtC,EAAOwC,OAIhB,sBAAK5C,UAAU,KAAf,UACE,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACF,cAAC,EAAD,CAAU1B,OAAQmC,WARnB,6C,GA3BeM,IAAMjB,WCGTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACM,cAAC,EAAD,MAENC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e35849db.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({ name, email, id}) => {\r\n  \r\n  return (\r\n  \r\n<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n<img src ={`https://robohash.org/${id}?200x200`} alt =\"a robot face\" />\r\n<div>\r\n<h2>{name}</h2>\r\n<p>{email}</p>\r\n</div>\r\n\r\n</div>\r\n\r\n);\r\n\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n  \r\n  \r\n  return(\r\n  <div>\r\n    {\r\n    robots.map((user, i) => {\r\n    return <Card \r\n    key ={robots[i].id} \r\n    id={robots[i].id} \r\n    name ={robots[i].name} \r\n    email={robots[i].email} \r\n    />\r\n  })\r\n}\r\n    </div>)\r\n}\r\n\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n  \r\n  return (\r\n    <div className ='pa2'>\r\n  <input  className ='pa3 ba -b--green bg-lightest-blue'\r\n  type='search' \r\n  placeholder='search robots'\r\n  onChange={searchChange}\r\n   />\r\n  \r\n  </div>\r\n);\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\r\n  return (\r\n  <div style={{overflowY:'scroll', border: '5px solid black', height:'800px'}}>\r\n  {props.children}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n\r\n  componentDidCatch(error, info){\r\n    this.setState({ hasError:true })\r\n\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Ooops. That is not good</h1>\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users') //get users from webapi\r\n    .then(response => response.json()) //convert to json \r\n    .then(users => this.setState({robots:users})); //update state\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value})\r\n        \r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n\r\n   return !robots.length ?\r\n   <h1>Loading</h1> :\r\n    \r\n (\r\n  <div className='tc'>\r\n    <h1 className ='f1'>RoboFriends</h1>\r\n    <SearchBox searchChange={this.onSearchChange} />\r\n    <Scroll>\r\n      <ErrorBoundry>\r\n    <CardList robots={filteredRobots} />\r\n    </ErrorBoundry>\r\n    </Scroll>\r\n  </div>\r\n  );\r\n }}\r\n\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//npm start to start in terminal "],"sourceRoot":""}